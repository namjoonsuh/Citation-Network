source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net3 <- Network1(120,5,30)
source('Synthetic Networks.R')
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net3 <- Network1(120,5,30)
source('Synthetic Networks.R')
Net4 <- Network2(120,10,0,3,20)
Net5 <- Network2(210,0,50,3,18)
Net6 <- Network2(210,10,10,3,18)
######## Third Scenario ########
Net7 <- Network3(120,10,0,3,20)
Net8 <- Network3(210,0,50,3,18)
Net9 <- Network3(210,10,10,3,18)
source('Synthetic Networks.R')
#################### data generation N = 30, K = 3, NNZ = 10 ####################
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net3 <- Network1(120,5,30)
######## Second Scenario ########
Net4 <- Network2(120,10,0,3,20)
Net5 <- Network2(210,0,50,3,18)
Net6 <- Network2(210,10,10,3,18)
######## Third Scenario ########
Net7 <- Network3(120,10,0,3,20)
Net8 <- Network3(210,0,50,3,18)
Net9 <- Network3(210,10,10,3,18)
par(mfrow=c(1,1))
par(mfrow=c(3,3))
plotScree(Net1); plotScree(Net2); plotScree(Net3);
plotScree(Net4); plotScree(Net5); plotScree(Net6);
par(mfrow=c(1,1))
par(mfrow=c(3,3))
plotScree(Net1); plotScree(Net2); plotScree(Net3);
plotScree(Net4); plotScree(Net5); plotScree(Net6);
plotScree(Net7); plotScree(Net8); plotScree(Net9);
par(mfrow=c(1,1))
result2 <- ADMM(Net1, 0.002, 0.014) ## gamma : 0.004, delta : 0.014 ##
a2<-result2[[1]]
M2<-result2[[2]]
L2<-result2[[3]]
S2<-result2[[4]]
K = qr(L2)$rank
First_eigen1 = eigen(L2)$vectors[,1]
Second_eigen1 = eigen(L2)$vectors[,2]
Third_eigen1 = eigen(L2)$vectors[,3]
Label1 = seq(from=1,to=N,by=1)
KMeans = kmeans(eigen(L2)$vectors[,1:K], K, iter.max = 1000, nstart = 100, algorithm = "Hartigan-Wong")
plot(eigen(L2)$vectors[,1:K], col=KMeans$cluster,pch=2, main="N=80,K=4,NNZ=20",
xlab="First_eigen vector", ylab="Second_eigen vector")
result2 <- ADMM(Net1, 0.002, 0.014) ## gamma : 0.004, delta : 0.014 ##
result2 <- ADMM(Net9, 0.002, 0.014) ## gamma : 0.004, delta : 0.014 ##
a2<-result2[[1]]
M2<-result2[[2]]
L2<-result2[[3]]
S2<-result2[[4]]
K = qr(L2)$rank
First_eigen1 = eigen(L2)$vectors[,1]
Second_eigen1 = eigen(L2)$vectors[,2]
Third_eigen1 = eigen(L2)$vectors[,3]
Label1 = seq(from=1,to=N,by=1)
KMeans = kmeans(eigen(L2)$vectors[,1:K], K, iter.max = 1000, nstart = 100, algorithm = "Hartigan-Wong")
plot(eigen(L2)$vectors[,1:K], col=KMeans$cluster,pch=3, main="N=80,K=4,NNZ=20",
xlab="First_eigen vector", ylab="Second_eigen vector")
result2 <- ADMM(Net8, 0.002, 0.014) ## gamma : 0.004, delta : 0.014 ##
a2<-result2[[1]]
M2<-result2[[2]]
L2<-result2[[3]]
S2<-result2[[4]]
K = qr(L2)$rank
First_eigen1 = eigen(L2)$vectors[,1]
Second_eigen1 = eigen(L2)$vectors[,2]
Third_eigen1 = eigen(L2)$vectors[,3]
Label1 = seq(from=1,to=N,by=1)
KMeans = kmeans(eigen(L2)$vectors[,1:K], K, iter.max = 1000, nstart = 100, algorithm = "Hartigan-Wong")
plot(eigen(L2)$vectors[,1:K], col=KMeans$cluster,pch=3, main="N=80,K=4,NNZ=20",
xlab="First_eigen vector", ylab="Second_eigen vector")
View(ADMM)
View(ADMM)
View(ADMM)
source('Synthetic Networks.R')
gamma = seq(from=0.01,to=0.1,by=0.01);
delta = seq(from=0.01,to=0.1,by=0.01);
Res1 <- Model_Sel(Net1,gamma,delta)
dim(Net1)
dim(Net1)[1]
source('Synthetic Networks.R')
Res1 <- Model_Sel(Net1,gamma,delta)
Re1[[3]]
Res1[[3]]
Re1[[4]]
Res1[[4]]
gamma = seq(from=0.001,to=0.01,by=0.01);
delta = seq(from=0.01,to=0.1,by=0.01);
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res[[4]]
Res1[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.1,by=0.01);
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res1[[4]]
Res1[[3]]
sum(Net1)
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
AIC
Res1[[1]]
Res1[[3]]
Res1[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.02,to=0.03,by=0.001);
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res1[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.03,to=0.04,by=0.001);
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res1[[4]]
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res1[[4]]
gamma = seq(from=0.01,to=0.015,by=0.001);
delta = seq(from=0.03,to=0.04,by=0.001);
Res1 <- Model_Sel(Net1,gamma,delta)
Res1[[3]]
Res1[[4]]
Res1[[1]]
result2 <- ADMM(Net8, gamma[3], delta[3])
result2 <- ADMM(Net1, gamma[3], delta[3])
a2<-result2[[1]]
M2<-result2[[2]]
L2<-result2[[3]]
S2<-result2[[4]]
S2
delta[3]
gamma[3]
Res2 <- Model_Sel(Net2,gamma,delta)
Res2[[3]]
Res2[[4]]
gamma = seq(from=0.01,to=0.015,by=0.001);
delta = seq(from=0.02,to=0.03,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta)
Res2[[3]]
Res2[[4]]
gamma = seq(from=0.01,to=0.015,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.002);
Res2 <- Model_Sel(Net2,gamma,delta)
Res2[[4]]
Res2[[3]]
Res2 <- Model_Sel(Net2,0.004,0.014)
Res2[[4]]
Res3[[3]]
Res2[[3]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta)
Res2[[4]]
Res2[[3]]
gamma[4]
delta[4]
Res1 <- Model_Sel(Net1,gamma,delta) ## gamma : 0.012, delta : 0.032 ##
set.seed(1234)
Net2 <- Network1(80,4,20)
Res2 <- Model_Sel(Net2,0.004,0.013) ## gamma : 0.004, delta : 0.013 ##
Res2[[3]]
Res[[4]]
Res2[[4]]
set.seed(1234)
par(mfrow=c(3,3))
Net2 <- Network1(80,4,20)
N=80
K=4
NNZ=20
ad_hoc_ind = c();
for(i in 1:(K-1)){
for(j in i:(K-1)){
ind = cbind( sample( ((N/K)*(i-1)+1):((N/K)*i), floor(NNZ/K), replace = FALSE),
sample( ((N/K)*(j)+1):((N/K)*(j+1)), floor(NNZ/K), replace = FALSE ) )
ad_hoc_ind = rbind(ad_hoc_ind,ind)
}
}
S = matrix(0,N,N)
S[ad_hoc_ind]=runif(1,14,15)
S = S + t(S)
diag(S) = 0
length(ad_hoc_ind)
ad_hoc_ind
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
Res1 <- Model_Sel(Net1,0.012,0.032)
Res[[3]]
Res1[[3]]
Res1[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.004, delta : 0.013 ##
Res2[[3]]
Res2[[4]]
gamma[5]
delta[7]
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res2 <- Model_Sel(Net2,0.05,0.016)
Res[[2]]
Res2[[3]]
Res2 <- Model_Sel(Net2,0.05,0.016)
Res2 <- Model_Sel(Net2,0.005,0.016)
Res2[[3]]
Res2[[4]]
set.seed(1234)
Net3 <- Network1(120,5,30)
Net3 <- Network1(120,5,30)
A = choose(K,2);
A
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net3 <- Network1(120,5,30)
rm(list=ls())
setwd('C:/Users/namjo/Documents/GitHub/Citation-Network/Codes & Data/Codes')
library('Matrix')      ## For matrix computation on BIC
library('igraph')      ## For drawing graph
source('SynData.R')    ## Function for creating binary network
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
source('Synthetic Networks.R')
#################### data generation N = 30, K = 3, NNZ = 10 ####################
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net3 <- Network1(120,5,30)
Res1 <- Model_Sel(Net1,0.012,0.032) ## gamma : 0.012, delta : 0.032 ##
Res1[[3]]
Res2[[4]]
Res1[[4]]
Res2 <- Model_Sel(Net2,0.005,0.016)
Res2[[3]]
Res[[4]]
Res2[[4]]
source('Synthetic Networks.R')
set.seed(1234)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
N=30;K=3;NNZ=9;
### Generate alpha from uniform distribution
alpha = runif(1,-11,-10)
### Create diagonal matrix D with non-negative weights
D = diag(runif(1,19,20),K)
### Create binary matrix F(0,1) whose columns are orthogonal with each other.
C = floor(N/K);              # C : number of 1s for each column
F = matrix(0,N,K);           # Create empty F matrix
if(K>0){
for(l in 1:K){
F[((l-1)*C+1):(l*C),l] <- 1
}
if(N%%C!=0)
F[(K*C+1):N,K] <- 1      # In last column of F, we fill the last remaining entries with 1s,
# when N is not divided by K.
}
if(K==0){
F <- matrix(0,N,K)
}
F = (diag(N)-1/N*matrix(1,N,N))%*%F
ad_hoc_ind = c();  A = choose(K,2);
for(i in 1:(K-1)){
for(j in i:(K-1)){
ind = cbind( sample( ((N/K)*(i-1)+1):((N/K)*i), floor(NNZ/A), replace = FALSE),
sample( ((N/K)*(j)+1):((N/K)*(j+1)), floor(NNZ/A), replace = FALSE ) )
ad_hoc_ind = rbind(ad_hoc_ind,ind)
}
}
ad_hoc_ind
S = matrix(0,N,N)
S[ad_hoc_ind]=runif(1,19,20)
S = S + t(S)
diag(S) = 0
S = matrix(0,N,N)
S[ad_hoc_ind]=runif(1,19,20)
S = S + t(S)
diag(S) = 0
### call function to generate the adjacency matrix
X1 <- SynData(alpha,F,D,S,N)
View(X1)
par(mfrow=c(1,1))
### call function to generate the adjacency matrix
X1 <- SynData(alpha,F,D,S,N)
### generate the figure to illustrate the network
X_draw <- graph_from_adjacency_matrix(X1, mode = c("undirected"))
Edge = which(S>0, arr.ind=TRUE)
g = graph_from_edgelist(Edge)
S_g = as.undirected(g)
A=get.edgelist(X_draw)
B=get.edgelist(S_g)
list = rep(0,length(B[,1]))
for(i in 1:length(B[,1])){
for(j in 1:length(A[,1])){
if(B[i,1]==A[j,1] && B[i,2]==A[j,2]){
list[i] = j;
break;
}
}
}
E(X_draw)$color <- "red"
E(X_draw)[list]$color <- "green"
plot(X_draw,main=TeX(sprintf("$\\textbf{n_{1} = %d, K = %d,\\left|S^{*}\\right| = %d}$", N, K, NNZ)))
source('Synthetic Networks.R')
set.seed(1234)
Net1 <- Network1(30,3,9)
set.seed(123)
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,20)
Net1 <- Network1(30,3,9)
source('Synthetic Networks.R')
set.seed(123)
Net1 <- Network1(30,3,9)
Net2 <- Network1(80,4,20)
Net2 <- Network1(80,4,18)
Net3 <- Network1(120,5,30)
Res1 <- Model_Sel(Net1,0.012,0.032)
Res1[[3]]
Res2[[4]]
Net2 <- Network1(80,4,18)
Res2 <- Model_Sel(Net2,0.005,0.016) ## gamma : 0.005, delta : 0.016 ##
Res2[[3]]
Res3[[4]]
Res2[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res2[[3]]
Res2[[4]]
plotScree(Net2)
gamma = seq(from=0.01,to=0.02,by=0.001);
delta = seq(from=0.02,to=0.03,by=0.001);
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.005,to=0.01,by=0.001);
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.01,to=0.02,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res2[[3]]
Res2[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.005,to=0.01,by=0.001);
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res2[[3]]
Res[[4]]
Res2[[4]]
Res2[[3]]
gamma = seq(from=0.003,to=0.005,by=0.0002);
delta = seq(from=0.005,to=0.01,by=0.001);
Net1 <- Network1(30,3,9)
Res1 <- Model_Sel(Net1,0.012,0.032) ## gamma : 0.012, delta : 0.032 ##
Res1[[3]]
Res1[[4]]
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
Net1 <- Network1(30,3,9)
set.seed(123)
par(mfrow=c(3,3))
######## First Scenario ########
Net1 <- Network1(30,3,9)
set.seed(123)
Net1 <- Network1(30,3,9)
Res1 <- Model_Sel(Net1,0.012,0.032) ## gamma : 0.012, delta : 0.032 ##
Res1[[3]]
Res1[[4]]
source('Synthetic Networks.R')
set.seed(123)
Net1 <- Network1(30,3,9)
gamma = seq(from=0.01,to=0.02,by=0.001);
delta = seq(from=0.03,to=0.04,by=0.001);
Res1 <- Model_Sel(Net1,gamma,delta) ## gamma : 0.012, delta : 0.032 ##
Res1[[3]]
Res1[[4]]
gamma = seq(from=0.01,to=0.02,by=0.002);
delta = seq(from=0.02,to=0.03,by=0.002);
Res1 <- Model_Sel(Net1,gamma,delta) ## gamma : 0.012, delta : 0.032 ##
Res1[[3]]
Res[[4]]
Res1[[4]]
gamma[2]; delta[3];
Res2[[3]]
Res2[[4]]
Model_Sel(Net1,gamma[2],delta[3])
Res1[[1]]
Res1[[2]]
Res2[[3]]
Res2[[4]]
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.006,to=0.007,by=0.0002);
Res2 <- Model_Sel(Net2,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res2[[3]]
Res2[[4]]
gamma[4]
delta[4]
Model_Sel(Net2,0.004,0.0066)
set.seed(123)
Net3 <- Network1(120,5,30)
gamma = seq(from=0.001,to=0.01,by=0.001);
delta = seq(from=0.006,to=0.007,by=0.0002);
Res3 <- Model_Sel(Net3,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.006,to=0.007,by=0.0002);
Res3 <- Model_Sel(Net3,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res3[[3]]
Res[[4]]
Res3[[4]]
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.005,to=0.006,by=0.0002);
Res3 <- Model_Sel(Net3,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res3[[3]]
Res3[[4]]
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.004,to=0.005,by=0.0002);
Res3 <- Model_Sel(Net3,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res3[[3]]
Res3[[4]]
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.0046,to=0.0048,by=0.00004);
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.0046,to=0.0048,by=0.00004);
Res3 <- Model_Sel(Net3,gamma,delta) ## gamma : 0.005, delta : 0.016 ##
Res3[[3]]
Res3[[4]]
gamma[[2]]
gamma[2]
delta[5]
set.seed(123)
set.seed(123)
Net4 <- Network2(120,10,0,3,20)
set.seed(123)
Net4 <- Network2(120,10,0,3,18)
Net3 <- Network1(120,5,30)
Res3 <- Model_Sel(Net3,0.03,0.00476) ## gamma : 0.003, delta : 0.00476 ##
Res3[[3]]
Res3[[4]]
set.seed(123)
Net3 <- Network1(120,5,30)
Res3 <- Model_Sel(Net3,0.03,0.00476) ## gamma : 0.003, delta : 0.00476 ##
Res3[[3]]
Res3[[4]]
Res3 <- Model_Sel(Net3,0.003,0.00476) ## gamma : 0.003, delta : 0.00476 ##
Res3[[3]]
Res3[[4]]
plotScree(Net4)
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.004,to=0.005,by=0.0002);
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.004,to=0.005,by=0.0002);
Res4 <- Model_Sel(Net4,gamma,delta) ## gamma : 0.003, delta : 0.00476 ##
Res4[[3]]
Res4[[4]]
gamma = seq(from=0.001,to=0.01,by=0.002);
delta = seq(from=0.001,to=0.002,by=0.0005);
Res4 <- Model_Sel(Net4,gamma,delta) ## gamma : 0.003, delta : 0.00476 ##
Res4[[3]]
Res4[[4]]
plotScree(Net4)
