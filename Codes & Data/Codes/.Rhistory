Edge_list <- as.matrix(Sorted_Ad_hoc_link[,1:2])
row_name = row.names(X)
col1 = as.numeric(sub('.','',row_name[Edge_list[,1]]))
col2 = as.numeric(sub('.','',row_name[Edge_list[,2]]))
Paper_Table = matrix(as.numeric(cbind(col1,col2)),length(Edge_list)/2,2)
pap_list = paperList[,3]
C1 = pap_list[col1]
C2 = pap_list[col2]
Ad_hoc_list = list()
P1 = paperList[col1,c(1,6,3)]
P2 = paperList[col2,c(1,6,3)]
for(i in 1:length(col1)){
Ad_hoc_list = rbind(Ad_hoc_list,P1[i,],P2[i,])
}
write.csv(Ad_hoc_list, "C:/Users/namjo/Documents/GitHub/Citation-Network/Codes & Data/Codes/ad_hoc_51.csv")
H_Zou = which(row.names(X)=="V507",arr.ind=TRUE)
H_Zou_Cit_pap = which(X[H_Zou,]==1, arr.ind=TRUE)
H_Zou_Cit_pap_ind = as.numeric(sub('.','',row.names(X)[H_Zou_Cit_pap]))
H_Zou_paper = paperList[H_Zou_Cit_pap_ind,c(3,6)]
length(which(H_Zou_paper[,2]=="Mixed Topics",arr.ind=TRUE))
H_Zou_paper = paperList[H_Zou_Cit_pap_ind,c(3,6)]
H_Zou_paper
length(H_Zou_paper)
View(P1)
Result <- load("C:/Users/namjo/Documents/GitHub/Citation-Network/Codes & Data/Codes/Syn_Result.RData")
Result
object_list[[1]]
setwd('C:/Users/namjo/Documents/GitHub/Citation-Network/Codes & Data/Codes')
library('Matrix')      ## For matrix computation on BIC
library('igraph')      ## For drawing graph
source('SynData.R')    ## Function for creating binary network
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
source('Synthetic Networks.R')
#################### data generation N = 30, K = 3, NNZ = 10 ####################
set.seed(123)
par(mfrow=c(2,3),mar = c(2, 2, 2, 2)) # ??? ??? ??? ??? #
######## First Scenario ########
set.seed(123); Net1 <- Network1(30,3,9,1)
set.seed(123); Net2 <- Network1(80,4,18,2)
set.seed(123); Net3 <- Network1(120,5,30,3)
######## Second Scenario ########
set.seed(123); Net4 <- Network2(120,10,0,3,20,4)
set.seed(123); Net5 <- Network2(210,0,50,3,18,5)
set.seed(123); Net6 <- Network2(210,10,10,3,18,6)
par(mfrow=c(1,1))
source('functions.R')
par(mfrow=c(2,3),mar = c(2, 2, 2, 1))
plotScree(Net1[[1]],1); plotScree(Net2[[1]],2); plotScree(Net3[[1]],3);
plotScree(Net4[[1]],4); plotScree(Net5[[1]],5); plotScree(Net6[[1]],6);
par(mfrow=c(1,1))
set.seed(1234); K_means(Net1[[1]],0.011,0.024,3,1);
object_list[[1]]
gamma = seq(from=0.01,to=0.02,by=0.001);
delta = seq(from=0.02,to=0.03,by=0.001);
set.seed(1234); K_means(Net1[[1]],gamma[11],delta[11],2,1);
gamma = seq(from=0.004,to=0.005,by=0.0001);
delta = seq(from=0.009,to=0.01,by=0.0001);
object_list[[2]]
set.seed(1234); K_means(Net2[[1]],gamma[1],delta[11],3,2);
gamma = seq(from=0.002,to=0.003,by=0.0001);
delta = seq(from=0.0046,to=0.0048,by=0.00002);
object_list[[3]]
gamma[3]
delta[5]
Res3 <- Model_Sel(Net3[[1]],gamma,delta) ## gamma : 0.003, delta : 0.00475 ##
object_list[[4]]
gamma = seq(from=0.002,to=0.004,by=0.0002);
delta = seq(from=0.015,to=0.02,by=0.0005);
set.seed(1234); K_means(Net3[[1]],0.003,0.00476,5,3);
View(K_means)
View(K_means)
gamma=0.003
delta=0.00476
X=Net3[[1]]
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
K
gamma = seq(from=0.002,to=0.003,by=0.0001);
delta = seq(from=0.0046,to=0.0048,by=0.00002);
set.seed(1234); K_means(Net3[[1]],gamma[3],delta[5],4,3);
####################  preparation  ####################
rm(list=ls())
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
library('Matrix')      ## For matrix computation on BIC
library('igraph')      ## For drawing graph
source('SynData.R')    ## Function for creating binary network
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
source('Synthetic Networks.R')
source('GD2.R')
#################### data generation N = 30, K = 3, NNZ = 10 ####################
set.seed(123)
set.seed(123); Net1 <- Network1(30,3,9,1)
Net1[[1]]
sum(Net1[[1]])/30^2
sum(Net1[[1]])
2*sqrt(30*0.3)
2*sqrt(0.3/30)
2*sqrt(0.3/30)
2*sqrt(0.3/30^2)
Res1 <- Model_Sel(Net1[[1]],0.011,0.023) ## gamma : 0.011, delta : 0.023 ##
Res1
View(ADMM)
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
rm(list=ls())
setwd('C:/Users/Namjoon Suh/Desktop/Network')
library("igraph"); library("CINNA"); library("greed");
source('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes/ADMM_Optim.R')
source('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes/functions.R')
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
View(ADMM)
rm(list=ls())
setwd('C:/Users/Namjoon Suh/Desktop/Network')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
X = as.matrix(read.table('polblogsgiant.txt'))
source('ADMM_Optim.R')
setwd('C:/Users/Namjoon Suh/Desktop/Network')
source('ADMM_Optim.R')
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
View(ADMM)
library(RSpectra)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0,0)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0,0)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0,0)
res <- ADMM(X,0,0.001)
res <- ADMM(X,0,0.0000001)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0,0.0000001)
res <- ADMM(X,0,0.00000000000000001)
res <- ADMM(X,0,0)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0.00001,0)
View(GD)
View(GD)
View(GD)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0.00001,0)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0.00001,0)
res[[4]]
S=res[[4]]
View(S)
qr(res[[3]])$rank
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0.0001,0)
S=res[[4]]
View(S)
res <- ADMM(X,0.00015,0)
res <- ADMM(X,0.0005,0)
res <- ADMM(X,0.0005,0.001)
res <- ADMM(X,0.0005,0.000000000000000000000000000000000001)
res <- ADMM(X,0.001,0)
S=res[[4]]
S=res[[4]]
View(S)
res <- ADMM(X,0.0005,0)
S=res[[4]]
View(S)
View(A)
View(X)
res <- ADMM(X,0.0006,0)
S=res[[4]]
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count
res <- ADMM(X,0.00065,0)
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count
res <- ADMM(X,0.00065,0.00001)
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
rm(list=ls())
setwd('C:/Users/Namjoon
rm(list=ls())
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
rm(list=ls())
setwd('C:/Users/Namjoon Suh/Desktop/Stat+PDE/Citation-Network/Codes & Data/Codes')
source('ADMM_Optim.R')
library("igraph"); library("CINNA"); library("greed");
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = matrix(0,1222,1222);
for(i in 1 : 1222){
for(j in 1 : 1222){
if(X[i,j] == 1){
X[j,i] = 1;
}
}
}
diag(X) <- 0
X = as.matrix(read.table('polblogsgiant.txt'))
res <- ADMM(X,0.00065,0.00001)
res <- ADMM(X,0.00065,0.00002)
res <- ADMM(X,0.00065,0.0001)
S=res[[4]]
res <- ADMM(X,0.00065,0.0003)
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
res <- ADMM(X,0.00065,0.001)
S=res[[4]]
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count
res <- ADMM(X,0.00065,0.0015)
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count
res <- ADMM(X,0.00065,0.003)
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
res <- ADMM(X,0.00065,0.005)
S=res[[4]]
count <- 0
for(i in 1:1222){
for(j in 1:1222){
if(i<j){
if(S[i,j]!=0){
count <- count + 1;
}
}
}
}
count
Edge = which(S>0, arr.ind=TRUE)
g = graph_from_edgelist(Edge)
g
X[420,127]
X[454,127]
X[127,454]
View(Edge)
table(Edge[,1])
data(Blogs)
X = as.matrix(Blogs[[1]]);
A = as.matrix(read.table('polblogsgiant.txt'))
View(A)
View(X)
rownames(X)[128]
rownames(X)
X
row.names(X)
X[128,1]
X[1,128]
X[1,497]
X[1,566]
X[1,922]
X[1,48]
X[1,1006]
X[1,1178]
X[1,768]
X[1,830]
X[1,838]
X[1,890]
X[1,1178]
qr(L)$rank
L=res[[3]]; # Rank of L : 2, S=res[[4]]; # Non-zero S_{ij} : 164
qr(L)$rank
K = eigen(L)$vector
K = eigen(L)$vector[,1:2]
plot(K[,1],K[,2])
label = read.table('polblogsgianty.txt')
View(label)
kmeans(k,2,iter.max = 100,nstart=1)
kmeans(K,2,iter.max = 100,nstart=1)
