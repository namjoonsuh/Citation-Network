Init_doses[i] <- as.numeric(Enoxaparin[array_1,5])[1,1]
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
kg[i] <- Pt_Ht_Wt[array_2,5]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Enoxaparin[array_1,5]
Init_doses[i] <- as.numeric(Enoxaparin[array_1,5][1,1])
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
Init_doses[i] <- as.numeric(Enoxaparin[array_1,5][1,1])
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
kg[i] <- Pt_Ht_Wt[array_2,5]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Init_doses[i]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
Enoxaparin[array_1,5][1,1]
Init_doses[i] <- Enoxaparin[array_1,5][1,1]
Init_doses[i]
Init_doses[i]
typeof(Init_doses[1])
Init_doses[i] <- Enoxaparin[array_1,5][1,1][[1]]
Init_doses[i]
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]])
typeof(Init_doses[1])
unlist(Enoxaparin[array_1,5][1,1][[1]])
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]])
Init_doses[1]
Init_doses[i] <- as.numeric(unlist(Enoxaparin[array_1,5][1,1][[1]]))
Init_doses[1]
as.numeric(kg[i])
as.numeric(kg[i])
as.numeric(kg[i])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]])
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
kg[i] <- Pt_Ht_Wt[array_2,5]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Init_doses[1]
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]])
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
kg[i] <- Pt_Ht_Wt[array_2,5]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
unlist(Enoxaparin[array_1,5][1,1][[1]])
Patient_Enox <- unique(Enoxaparin[,1]) # 866 patients
counts_Enox <- table(Enoxaparin[,1])
counts_Anti_Xa = table(Anti_Xa[,1]) # For each individual, how many times does he/she got examined?
Init_doses <- rep(0,866); kg <- rep(0,866); mg_kg <- rep(0,866);
counts_Anti <- rep(0,866); Anti_Xa_Aver <- rep(0,866); Anti_Xa_per_mg_kg_per <- rep(0,866);
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]])
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1]
kg[i] <- Pt_Ht_Wt[array_2,5]
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i])
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,kg,mg_kg,counts_Anti,Anti_Xa_Aver,
Anti_Xa_per_mg_kg_per))
View(Final_Table)
colnames(Final_Table) <- c("Counts Enox","Init Doses","Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
write.csv(as.matrix(Final_Table), file = 'Final Table.csv')
View(Final_Table)
Anti_Xa_Aver
plot(mg_kg,Anti_Xa_Aver)
plot(log(mg_kg),Anti_Xa_Aver)
plot(log(mg_kg),log(Anti_Xa_Aver))
lm(Anti_Xa_Aver~mg_kg)
?lm
summary(lm(Anti_Xa_Aver~mg_kg))
summary(lm(log(Anti_Xa_Aver)~log(mg_kg)))
summary(lm(log(Anti_Xa_Aver+1)~log(mg_kg+1)))
summary(lm(Anti_Xa_Aver~Init_doses))
plot(Init_doses,Anti_Xa_Aver)
plot(Init_doses,log(Anti_Xa_Aver))
summary(lm(Anti_Xa_Aver~Init_doses+kg))
typeof(kg)
kg[1]
unlist(kg)
summary(lm(Anti_Xa_Aver~Init_doses+unlist(kg)))
summary(lm(Anti_Xa_Aver~Init_doses+kg))
kg[1]
kg[2]
Pt_Ht_Wt[1,5]
as.numeric(Pt_Ht_Wt[1,5])
Enoxaparin <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 1)
Pt_Ht_Wt <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 2)
Anti_Xa <- read_excel("AntiXa Levels List.xlsx",sheet = 1)
Patient_Enox <- unique(Enoxaparin[,1]) # 866 patients
counts_Enox <- table(Enoxaparin[,1])
counts_Anti_Xa = table(Anti_Xa[,1]) # For each individual, how many times does he/she got examined?
Init_doses <- rep(0,866); kg <- rep(0,866); mg_kg <- rep(0,866);
counts_Anti <- rep(0,866); Anti_Xa_Aver <- rep(0,866); Anti_Xa_per_mg_kg_per <- rep(0,866);
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]]);
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
kg[i] <- as.numeric(Pt_Ht_Wt[array_2,5]);
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i]);
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,kg,mg_kg,counts_Anti,Anti_Xa_Aver,
Anti_Xa_per_mg_kg_per))
colnames(Final_Table) <- c("Counts Enox","Init Doses","Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
kg[1]
summary(lm(Anti_Xa_Aver~Init_doses+kg))
summary(lm(Anti_Xa_Aver~Init_doses))
summary(lm(Anti_Xa_Aver~Init_doses/kg))
summary(lm(Anti_Xa_Aver~I(Init_doses/kg)))
summary(lm(Anti_Xa_Aver~Init_doses+log(kg)))
summary(lm(Anti_Xa_Aver~Init_doses+kg))  ## Init_doses significant p-value = 0.0437
summary(lm(log(Anti_Xa_Aver+1)~Init_doses+kg))  ## Init_doses significant p-value = 0.0437
summary(lm(log(Anti_Xa_Aver)~Init_doses+kg))  ## Init_doses significant p-value = 0.0437
summary(lm(sqrt(Anti_Xa_Aver)~Init_doses+kg))  ## Init_doses significant p-value = 0.0437
summary(lm(sqrt(Anti_Xa_Aver)~Init_doses))  ## Init_doses significant p-value = 0.0394
plot(Init_doses,sqrt(Anti_Xa_Aver))
par(mfrow=c(1,1))
plot(Init_doses,sqrt(Anti_Xa_Aver))
summary(lm(sqrt(Anti_Xa_Aver)~mg_kg))
summary(lm(sqrt(Anti_Xa_Aver)~sqrt(mg_kg)))
plot(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
lm01 <- lm(sqrt(Anti_Xa_Aver)~sqrt(mg_kg))
plot(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
abline(lm01)
data1 <- cbind(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
data1[1:3,]
data1 <- cbind(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
colnames(data1)<-c("x","y")
data1[1:3,]
plot(x,y,data=data1)
data1 <- cbind(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
colnames(data1)<-c("x","y")
data1 <- data.frame(data1)
data1
plot(x,y,data=data1)
data1$x
data1$y
lm(y~x,data=data1)
data2 <- data1[data1$x<=0.8 && data1$y>= 0.1,]
data2
data2[1:3,]
dim(data2)
dim(data1)
data2 <- data1[data1$x<=0.8 & data1$y>= 0.1,]
dim(data2)
data1 <- cbind(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
colnames(data1)<-c("x","y")
data1 <- data.frame(data1)
data2 <- data1[data1$x<=0.8 & data1$y>= 0.1,]
lm02 <- lm(y~x,data=data2)
lm02 <- lm(y~x,data=data2)
plot(data2$x,data2$y)
abline(lm02)
summary(lm02)
data2 <- data1[data1$y>= 0.1,]
lm02 <- lm(y~x,data=data2)
plot(data2$x,data2$y)
abline(lm02)
summary(lm02)
data3 <- cbind(mg_kg,Anti_Xa_Aver)
colnames(data3)<-c("x","y")
data3 <- data.frame(data3)
data4 <- data3[data3$y>= 0.01,]
lm03 <- lm(y~x,data=data3)
summary(lm03)
plot(data3$x,data3$y)
plot(data4$x,data4$y)
lm04 <- lm(y~x,data=data4)
summary(lm04)
abline(lm04)
data5 <- data3[data3$y<= 0.01,]
lm05 <- lm(y~x,data=data5)
summary(lm05)
plot(data5$x,data5$y)
abline(lm05)
dim(data5)
data5[1:10,]
rm(list=ls())
rm(list=ls())
library("readxl")
setwd('C:/Users/nsuh3/Desktop/Emory Project/Enoxaparin Research')
######################### Analysis on Enoxaparin dataset #########################
Enoxaparin <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 1)
Pt_Ht_Wt <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 2)
Anti_Xa <- read_excel("AntiXa Levels List.xlsx",sheet = 1)
Patient_Enox <- unique(Enoxaparin[,1]) # 866 patients
counts_Enox <- table(Enoxaparin[,1])
counts_Anti_Xa = table(Anti_Xa[,1]) # For each individual, how many times does he/she got examined?
Init_doses <- rep(0,866); Aver_doses <- rep(0,866); kg <- rep(0,866); mg_kg <- rep(0,866);
counts_Anti <- rep(0,866); Anti_Xa_Aver <- rep(0,866); Anti_Xa_per_mg_kg_per <- rep(0,866);
Enoxaparin[array_1,5][1,1][[1]]
i=1
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]]);
Aver_doses[i] <- Enoxaparin[array_1,5][1,1][[1]]
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
kg[i] <- as.numeric(Pt_Ht_Wt[array_2,5]);
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i]);
Enoxaparin[array_1,5][1,1][[1]]
Enoxaparin[array_1,5][1,1]
Enoxaparin[array_1,5]
mean(Enoxaparin[array_1,5])
Enoxaparin[array_1,5]
array
array_1
rownames(counts_Enox)[i]
Enoxaparin[array_1,5]
typeof(Enoxaparin[array_1,5])
mean(unlist(Enoxaparin[array_1,5]))
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]]);
Aver_doses[i] <- mean(unlist(Enoxaparin[array_1,5]))
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
kg[i] <- as.numeric(Pt_Ht_Wt[array_2,5]);
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i]);
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,
kg,mg_kg,counts_Anti,Anti_Xa_Aver,
Anti_Xa_per_mg_kg_per))
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,kg,mg_kg,counts_Anti,
Anti_Xa_Aver,Anti_Xa_per_mg_kg_per))
View(Final_Table)
View(Final_Table)
Final_Table$Anti_Xa_Aver!=0
length(Final_Table$Anti_Xa_Aver!=0)
which(Final_Table$Anti_Xa_Aver!=0,arr.ind=TRUE)
length(which(Final_Table$Anti_Xa_Aver!=0,arr.ind=TRUE))
data4 <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
dim(data4)
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,kg,mg_kg,counts_Anti,
Anti_Xa_Aver,Anti_Xa_per_mg_kg_per))
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
Final_Table
dim(Final_Table)
Enoxaparin <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 1)
Pt_Ht_Wt <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 2)
Anti_Xa <- read_excel("AntiXa Levels List.xlsx",sheet = 1)
Patient_Enox <- unique(Enoxaparin[,1]) # 866 patients
counts_Enox <- table(Enoxaparin[,1])
counts_Anti_Xa = table(Anti_Xa[,1]) # For each individual, how many times does he/she got examined?
Init_doses <- rep(0,866); Aver_doses <- rep(0,866); kg <- rep(0,866); mg_kg <- rep(0,866);
counts_Anti <- rep(0,866); Anti_Xa_Aver <- rep(0,866); Anti_Xa_per_mg_kg_per <- rep(0,866);
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]]);
Aver_doses[i] <- mean(unlist(Enoxaparin[array_1,5]))
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
kg[i] <- as.numeric(Pt_Ht_Wt[array_2,5]);
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i]);
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,kg,mg_kg,counts_Anti,
Anti_Xa_Aver,Anti_Xa_per_mg_kg_per))
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
colnames(Final_Table) <- c("Counts Enox","Init Doses","Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
write.csv(as.matrix(Final_Table), file = 'Final Table.csv')
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
colnames(Final_Table) <- c("Counts Enox","Init Doses","Aver doses", "Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
write.csv(as.matrix(Final_Table), file = 'Final Table.csv')
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
colnames(Final_Table) <- c("Counts Enox","Init Doses","Aver doses", "Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
write.csv(as.matrix(Final_Table), file = 'Final Table.csv')
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,kg,mg_kg,counts_Anti,
Anti_Xa_Aver,Anti_Xa_per_mg_kg_per))
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
colnames(Final_Table) <- c("Counts Enox","Init Doses","Aver doses", "Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
write.csv(as.matrix(Final_Table), file = 'Final Table.csv')
plot(log(mg_kg),log(Anti_Xa_Aver))
lm01 <- lm(sqrt(Anti_Xa_Aver)~sqrt(mg_kg))
plot(sqrt(mg_kg),sqrt(Anti_Xa_Aver))
abline(lm01)
Final_Table <- read_excel("Final_Table.xlsx",sheet = 1)
Final_Table <- read_excel("Final_Table.xlsx",sheet = 1)
setwd('C:/Users/nsuh3/Desktop/Emory Project/Enoxaparin Research')
Final_Table <- read_excel("Final_Table.xlsx",sheet = 1)
Final_Table <- read_excel("Final Table.xlsx",sheet = 1)
Data <- read_excel("Final Table.xlsx",sheet = 1)
plot(Data$Init_Doses,Data$`Anti Xa level Average`)
plot(Data$Init_Doses,Data$Anti Xa level Average)
View(Final_Table)
plot(Data$`Init Doses`,Data$`Anti Xa level Average`)
plot(Data$`mg/kg`,Data$`Anti Xa level Average`)
plot(Data$Kg,Data$`Anti Xa level Average`)
plot(log(Data$`mg/kg`),log(Data$`Anti Xa level Average`))
plot(sqrt(Data$`mg/kg`),sqrt(Data$`Anti Xa level Average`))
plot(log(Data$`mg/kg`),log(Data$`Anti Xa level Average`))
plot(Data$Kg,Data$`Anti Xa level Average`)
plot(Data$Kg,Data$`Anti Xa level Average`)
plot(log(Data$Kg),log(Data$`Anti Xa level Average`))
plot(log(Data$Kg),log(Data$`Anti Xa level Average`))
plot(log(Data$Kg),log(Data$`Anti Xa level Average`))
plot(sqrt(Data$Kg),sqrt(Data$`Anti Xa level Average`))
plot(Data$`mg/kg`,Data$`Aver anti Xa level / (mg/kg)`)
plot(log(Data$`mg/kg`),log(Data$`Aver anti Xa level / (mg/kg)`))
plot(sqrt(Data$`mg/kg`),sqrt(Data$`Aver anti Xa level / (mg/kg)`))
lm(Data$`Anti Xa level Average`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`)
summary(lm(Data$`Anti Xa level Average`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Anti Xa level Average`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
rm(list=ls())
library("readxl")
setwd('C:/Users/nsuh3/Desktop/Emory Project/Enoxaparin Research')
#######################################################################################
################################ Preprocessing dataset ################################
#######################################################################################
Enoxaparin <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 1)
Pt_Ht_Wt <- read_excel("SQ Enoxaparin List v2.xlsx",sheet = 2)
Anti_Xa <- read_excel("AntiXa Levels List.xlsx",sheet = 1)
Patient_Enox <- unique(Enoxaparin[,1]) # 866 patients
counts_Enox <- table(Enoxaparin[,1])
counts_Anti_Xa = table(Anti_Xa[,1]) # For each individual, how many times does he/she got examined?
Init_doses <- rep(0,866); Aver_doses <- rep(0,866); kg <- rep(0,866); mg_kg <- rep(0,866);
counts_Anti <- rep(0,866); Anti_Xa_Aver <- rep(0,866); Anti_Xa_per_mg_kg_per <- rep(0,866);
for(i in 1:866){
array_1 <- which(Enoxaparin[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
Init_doses[i] <- unlist(Enoxaparin[array_1,5][1,1][[1]]);
Aver_doses[i] <- mean(unlist(Enoxaparin[array_1,5]))
array_2 <- which(Pt_Ht_Wt[,1]==rownames(counts_Enox)[i],arr.ind=TRUE)[,1];
kg[i] <- as.numeric(Pt_Ht_Wt[array_2,5]);
mg_kg[i] <- Init_doses[i]/as.numeric(kg[i]);
if(length(which(rownames(counts_Enox)[i]==rownames(counts_Anti_Xa),arr.ind=TRUE))!=0){
indx <- which(rownames(counts_Anti_Xa)==rownames(counts_Enox)[i])
counts_Anti[i] <- table(Anti_Xa[,1])[indx]
array <- which(Anti_Xa[,1]==row.names(counts_Enox)[i],arr.ind=TRUE)[,1]
Anti_Xa_Aver[i] <- mean(as.matrix(Anti_Xa[array,6]))
Anti_Xa_per_mg_kg_per[i] <- Anti_Xa_Aver[i]/as.numeric(mg_kg[i])
}
}
Final_Table <- as.data.frame(cbind(counts_Enox,Init_doses,Aver_doses,kg,mg_kg,counts_Anti,
Anti_Xa_Aver,Anti_Xa_per_mg_kg_per))
Final_Table <- Final_Table[Final_Table$Anti_Xa_Aver!=0,]
colnames(Final_Table) <- c("Counts Enox","Init Doses","Aver doses", "Kg","mg/kg","Anti Xa counts",
"Anti Xa level Average", "Aver anti Xa level / (mg/kg)")
View(Final_Table)
Data <- read_excel("Final Table.xlsx",sheet = 1)
summary(lm(Data$`Anti Xa level Average`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Anti Xa level Average`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
plot(Data$`Init Doses`,Data$`Anti Xa level Average`)
counts_Enox <- table(Enoxaparin[,1])
counts_Enox
counts_Anti_Xa
summary(lm(Data$`Anti Xa level Average`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Anti Xa level Average`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Init Doses`+ Data$Kg + Data$`mg/kg`))
summary(lm(Data$`Aver anti Xa level / (mg/kg)`~Data$`Aver doses`+ Data$Kg + Data$`mg/kg`))
rm(list=ls())
setwd('C:/Users/nsuh3/Desktop/Citation Network/FLag')
library('Matrix')      ## For matrix computation on BIC
library('igraph')      ## For drawing graph
source('SynData.R')    ## Function for creating binary network
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
rm(list=ls())
setwd('C:/Users/nsuh3/Desktop/Citation Network/FLag/Codes & Data/Codes')
library('Matrix')      ## For matrix computation on BIC
library('igraph')      ## For drawing graph
source('SynData.R')    ## Function for creating binary network
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
source('functions.R')
set.seed(1234)
par(mfrow=c(1,3))
N = 30; K = 3; NNZ = 10;
### Ingredients for creating network : alpha, F, D, S
### Generate alpha from random uniform distribution
alpha = runif(1,-3,-2)
### Create diagonal matrix D with non-negative weights
D = diag(runif(1,7,8),K)
### Create binary matrix F(0,1) whose columns are orthogonal with each other.
C = floor(N/K);              # C : number of 1s for each column
F = matrix(0,N,K);           # Create empty F matrix
if(K>0){
for(l in 1:K){
F[((l-1)*C+1):(l*C),l] <- 1
}
if(N%%C!=0)
F[(K*C+1):N,K] <- 1      # In last column of F, we fill the last remaining entries with 1s,
# when N is not divided by K.
}
if(K==0){
F <- matrix(0,N,K)
}
RR = sample(1:N, 1, replace = FALSE)
F[RR,] = 1
F = (diag(N)-1/N*matrix(1,N,N))%*%F
### Create random symmetric sparse matrix S, whose entries are greater than or equal to zero.
S = matrix(0,N,N)
S = rsparsematrix(N, N, nnz = NNZ, symmetric = TRUE, rand.x = runif)
S[which(S!=0,arr.ind=TRUE)] = runif(1,6,7)
diag(S) = 0
### call function to generate the adjacency matrix
X1 <- SynData(alpha,F,D,S,N)
### generate the figure to illustrate the network
X_draw <- graph_from_adjacency_matrix(X1, mode = c("undirected"))
plot(X_draw)
result1 <- ADMM(X1, 0.01, 0.03) ## gamma : 0.01, delta : 0.03 ##
a1<-result1[[1]]
M1<-result1[[2]]
L1<-result1[[3]]
S1<-result1[[4]]
K = qr(L1)$rank
N = ncol(X1)
First_eigen1 = eigen(L1)$vectors[,1]
Second_eigen1 = eigen(L1)$vectors[,2]
Third_eigen1 = eigen(L1)$vectors[,3]
Label1 = seq(from=1,to=N,by=1)
KMeans = kmeans(eigen(L1)$vectors[,1:K], K, iter.max = 1000, nstart = 100, algorithm = "Hartigan-Wong")
plot(eigen(L1)$vectors[,1:K], col=KMeans$cluster,pch=2, main="N=30,K=3,NNZ=10",
xlab="First_eigen vector", ylab="Second_eigen vector")
Edge = which(S1>0, arr.ind=TRUE)
g = graph_from_edgelist(Edge)
S_g = as.undirected(g)
A=get.edgelist(X_draw)
B=get.edgelist(S_g)
list = rep(0,length(B[,1]))
for(i in 1:length(B[,1])){
for(j in 1:length(A[,1])){
if(B[i,1]==A[j,1] && B[i,2]==A[j,2]){
list[i] = j;
break;
}
}
}
X_draw <- graph_from_adjacency_matrix(X1, mode = c("undirected"))
E(X_draw)$color <- "black"
E(X_draw)[list]$color <- "blue"
par(mfrow=c(1,3))
plot(X_draw,main="N=30,K=3,NNZ=10")
