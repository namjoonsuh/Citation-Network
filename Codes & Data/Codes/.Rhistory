N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
KMeans = kmeans(eigen(L)$vectors[,1:K], K, iter.max = 1000, nstart = 100,
algorithm = "Hartigan-Wong")
for(i in 1:K_clusters){
print(length(which(KMeans$cluster==i,arr.ind=TRUE)))
print(which(KMeans$cluster==i,arr.ind=TRUE))
}
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
value
eigeng
eigen
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
eigen
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
e1
e2
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
K
K = qr(L)$rank
K
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
K
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=KMeans$cluster, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
K
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
K
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
eigen = eigen(L)$vectors[,1:K]
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
K
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(t(FAC),scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
FAC
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
View(ADMM)
View(ADMM)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
source('ADMM_Optim.R') ## Function of ADMM algorithm for estimation
X = Net2; gamma = 0.004; delta = 0.009;
result <- ADMM(X, gamma, delta)
a<-result[[1]]
M<-result[[2]]
L<-result[[3]]
S<-result[[4]]
K = qr(L)$rank
N = ncol(X)
FAC = eigen(L)$vectors[,1:K]
pca <- prcomp(FAC,scale=TRUE)
plot(pca$x[,1],pca$x[,2])
value = eigen(L)$value[1:K]
plot(eigen(L)$vectors[,1], eigen(L)$vectors[,2], col=K, pch=0,
main=TeX(sprintf("$\\textbf{Case  %d}$", case)), xlab="First Eigen vector", ylab="Second Eigen vector")
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
e1 <- eigen(t(eigen)%*%eigen)$vectors[,1];
e2 <- eigen(t(eigen)%*%eigen)$vectors[,2];
PC1 <- (eigen%*%e1)/sqrt(value[1])
PC2 <- (eigen%*%e2)/sqrt(value[2])
plot(PC1,PC2)
